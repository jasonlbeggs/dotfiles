#!/bin/sh

# Run PHP-CS-Fixer on staged PHP files
PROJECT=`php -r "echo dirname(dirname(dirname(realpath('$0'))));"`
STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\\\.php`

if [ "$#" -eq 1 ]
then
	oIFS=$IFS
	IFS='
	'
	STAGED_FILES="$1"
	IFS=$oIFS
fi
STAGED_FILES=${STAGED_FILES:-$STAGED_FILES_CMD}

printf "Linting and formatting staged PHP files...\n"

if [[ "$STAGED_FILES" = "" ]];
then
  printf "No PHP files staged...\n"
else
	for FILE in $STAGED_FILES
	do

		php -l -d display_errors=0 $FILE
		if [ $? != 0 ]
		then
			echo "There were some errors while linting..."
			exit 1
		fi

		./vendor/bin/php-cs-fixer fix $FILE --show-progress=none
		if [ $? != 0 ]
		then
			echo "There were some errors while linting..."
			exit 1
		fi

		printf "\n"

		FILES="$FILES $PROJECT/$FILE"
	done

	git add $STAGED_FILES
fi

# Run ES Lint on staged JavaScript and Vue files
STAGED_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$" | grep -v "public/")
STAGED_VUE_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".vue\{0,1\}$" | grep -v "public/")
STAGED_FILES="$STAGED_JS_FILES $STAGED_VUE_FILES"
ESLINT="$(git rev-parse --show-toplevel)/node_modules/.bin/eslint"

printf "Validating Javascript...\n"

if [[ "$STAGED_FILES" = "" ]]; then
	printf "No JavaScript files staged...\n"
  exit 0
fi

PASS=true

for FILE in $STAGED_FILES
do
  "$ESLINT" --fix "$FILE"

  if [[ "$?" == 0 ]]; then
    printf "\t\033[32mESLint Passed: $FILE\033[0m\n"
  else
    printf "\t\033[41mESLint Failed: $FILE\033[0m\n"
    PASS=false
  fi
done

if ! $PASS; then
  printf "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n"
  exit 1
else
	git add $STAGED_FILES
fi

exit $?